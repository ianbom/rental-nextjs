/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/HsNAtkKZZV6
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { CardTitle, CardHeader, CardContent, Card } from "@/components/ui/card"
import { ResponsiveLine } from "@nivo/line"
import { useEffect, useState } from "react";

export function DashboardAdmin() {
  const [totalKendaraan, setTotalKendaraan] = useState(0);
  const [totalCustomer, settotalCustomer] = useState(0);
  const [totalPegawai, settotalPegawai] = useState(0);
  const [totalTransaksi, settotalTransaksi] = useState(0);

  useEffect(() => {
    async function fetchTotalKendaraan() {
      try {
        const response = await fetch("/api/countKendaraan");
        const data = await response.json();
        setTotalKendaraan(data);
      } catch (error) {
        console.error("Failed to fetch total kendaraan:", error);
      }
    }

    fetchTotalKendaraan();

    async function fetchTotalCustomer() {
      try {
        const response = await fetch("/api/countCustomer");
        const data = await response.json();
        settotalCustomer(data);
      } catch (error) {
        console.error("Failed to fetch total kendaraan:", error);
      }
    }

    fetchTotalCustomer();

    async function fetchTotalPegawai() {
      try {
        const response = await fetch("/api/countPegawai");
        const data = await response.json();
        settotalPegawai(data);
      } catch (error) {
        console.error("Failed to fetch total kendaraan:", error);
      }
    }

    fetchTotalPegawai();

    async function fetchTotalTransaksi() {
      try {
        const response = await fetch("/api/countTransaksi");
        const data = await response.json();
        settotalTransaksi(data);
      } catch (error) {
        console.error("Failed to fetch total kendaraan:", error);
      }
    }

    fetchTotalTransaksi();
  }, []);

  return (
    <div className="">
      <div className="grid min-h-54 max-h-54 w-full grid-cols-1 gap-6 p-4 md:grid-cols-2 lg:grid-cols-4 lg:p-8">
        <Card className="flex flex-col">
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium">Total Vehicles</CardTitle>
            <CarIcon className="h-5 w-5 text-gray-500 dark:text-gray-400" />
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold">{totalKendaraan}</div>
            <p className="text-xs text-gray-500 dark:text-gray-400">+5% from last month</p>
          </CardContent>
        </Card>
        <Card className="flex flex-col">
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium">Total Transactions</CardTitle>
            <ReceiptIcon className="h-5 w-5 text-gray-500 dark:text-gray-400" />
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold">{totalTransaksi}</div>
            <p className="text-xs text-gray-500 dark:text-gray-400">+10% from last month</p>
          </CardContent>
        </Card>
        <Card className="flex flex-col">
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium">Total Customers</CardTitle>
            <UsersIcon className="h-5 w-5 text-gray-500 dark:text-gray-400" />
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold">{totalCustomer}</div>
            <p className="text-xs text-gray-500 dark:text-gray-400">+8% from last month</p>
          </CardContent>
        </Card>
        <Card className="flex flex-col">
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium">Total Employees</CardTitle>
            <PersonStandingIcon className="h-5 w-5 text-gray-500 dark:text-gray-400" />
          </CardHeader>
          <CardContent>
            <div className="text-3xl font-bold">{totalPegawai}</div>
            <p className="text-xs text-gray-500 dark:text-gray-400">+3% from last month</p>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}

function CarIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 0 0 0 2 12v4c0 .6.4 1 1 1h2" />
      <circle cx="7" cy="17" r="2" />
      <path d="M9 17h6" />
      <circle cx="17" cy="17" r="2" />
    </svg>
  )
}


function DollarSignIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="12" x2="12" y1="2" y2="22" />
      <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6" />
    </svg>
  )
}


function LineChart(props: any) {
  return (
    <div {...props} className="flex justify-center items-center w-full h-full">
      <ResponsiveLine
        data={[
          {
            id: "Desktop",
            data: [
              { x: "2024-01-01", y: 43 },
              { x: "2024-02-01", y: 137 },
              { x: "2024-03-01", y: 61 },
              { x: "2024-04-01", y: 145 },
              { x: "2024-05-01", y: 26 },
              { x: "2024-06-01", y: 154 },
            ],
          },
          {
            id: "Mobile",
            data: [
              { x: "2024-01-01", y: 60 },
              { x: "2024-02-01", y: 48 },
              { x: "2024-03-01", y: 177 },
              { x: "2024-04-01", y: 78 },
              { x: "2024-05-01", y: 96 },
              { x: "2024-06-01", y: 204 },
            ],
          },
        ]}
        margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
        xScale={{
          type: "time",
          format: "%Y-%m-%d",
        }}
        yScale={{
          type: "linear",
        }}
        axisTop={null}
        axisRight={null}
        axisBottom={{
          format: "%b %d",
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 5,
          tickPadding: 16,
        }}
        colors={["#2563eb", "#e11d48"]}
        pointSize={6}
        useMesh={true}
        gridYValues={6}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        role="application"
      />
    </div>
  )
}


function LineChartIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 3v18h18" />
      <path d="m19 9-5 5-4-4-3 3" />
    </svg>
  )
}


function PersonStandingIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="5" r="1" />
      <path d="m9 20 3-6 3 6" />
      <path d="m6 8 6 2 6-2" />
      <path d="M12 10v4" />
    </svg>
  )
}


function ReceiptIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z" />
      <path d="M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8" />
      <path d="M12 17.5v-11" />
    </svg>
  )
}


function UsersIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" />
      <circle cx="9" cy="7" r="4" />
      <path d="M22 21v-2a4 4 0 0 0-3-3.87" />
      <path d="M16 3.13a4 4 0 0 1 0 7.75" />
    </svg>
  )
}

export default DashboardAdmin;
